// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Midterm2Ex.Context;

#nullable disable

namespace Midterm2Ex.Migrations
{
    [DbContext(typeof(SongsDbContext))]
    partial class SongsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Midterm2Ex.Models.Album", b =>
                {
                    b.Property<int>("IdAlbum")
                        .HasColumnType("int");

                    b.Property<int>("IdStudio")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAlbum");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Midterm2Ex.Models.Artist", b =>
                {
                    b.Property<int>("IdArtist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArtist"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Pseudonym")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdArtist");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Midterm2Ex.Models.Song", b =>
                {
                    b.Property<int>("IdSong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSong"));

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<int?>("IdAlbum")
                        .HasColumnType("int");

                    b.Property<string>("SongName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdSong");

                    b.HasIndex("IdAlbum");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("Midterm2Ex.Models.SongArtist", b =>
                {
                    b.Property<int>("IdArtist")
                        .HasColumnType("int");

                    b.Property<int>("IdSong")
                        .HasColumnType("int");

                    b.HasKey("IdArtist", "IdSong");

                    b.HasIndex("IdSong");

                    b.ToTable("SongArtists");
                });

            modelBuilder.Entity("Midterm2Ex.Models.Studio", b =>
                {
                    b.Property<int>("IdStudio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStudio"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdStudio");

                    b.ToTable("Studios");
                });

            modelBuilder.Entity("Midterm2Ex.Models.Album", b =>
                {
                    b.HasOne("Midterm2Ex.Models.Studio", "Studio")
                        .WithMany("Albums")
                        .HasForeignKey("IdAlbum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Studio");
                });

            modelBuilder.Entity("Midterm2Ex.Models.Song", b =>
                {
                    b.HasOne("Midterm2Ex.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("IdAlbum");

                    b.Navigation("Album");
                });

            modelBuilder.Entity("Midterm2Ex.Models.SongArtist", b =>
                {
                    b.HasOne("Midterm2Ex.Models.Artist", "Artist")
                        .WithMany("SongArtists")
                        .HasForeignKey("IdArtist")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Midterm2Ex.Models.Song", "Song")
                        .WithMany("SongArtists")
                        .HasForeignKey("IdSong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Midterm2Ex.Models.Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Midterm2Ex.Models.Artist", b =>
                {
                    b.Navigation("SongArtists");
                });

            modelBuilder.Entity("Midterm2Ex.Models.Song", b =>
                {
                    b.Navigation("SongArtists");
                });

            modelBuilder.Entity("Midterm2Ex.Models.Studio", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
